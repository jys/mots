#!/usr/bin/env python3
# -*- coding: utf-8 -*-

from MarkovSurMots import MarkovSurMots
import sys
import cgi
from copy import deepcopy
import cgitb
cgitb.enable()
#cgitb.enable(display=0, logdir="/path/to/logdir")

# L'en-tête qui va bien
print("Content-Type: text/html")
print()

NBMOTS = 100
TOUS_CORPUS = {'Madame Bovary' : 'MadameBovary.txt', 'Madame Bovary dejsaccentueje' : 'MadameBovary.txt-dejsaccentuej.txt', 'La Recherche du temps perdu' : 'LaRecherche.txt', 'La Disparition' : 'LaDisparition.txt', 'le dictionnaire des lemmes' : 'lemmes-FRE.txt', 'For whom the bell tolls' : 'ForWhomTheBellTolls.txt'}

form = cgi.FieldStorage()

dejbutMot = form.getvalue('dejbutMot') or ''
nouveauCorpus = form.getvalue('nouveauCorpus')
raz = form.getvalue('raz')
if nouveauCorpus:
    corpus = form.getvalue('nouveauCorpus')
else:
    corpus = form.getvalue('corpus')
if raz:
    motsSejlectionnejs = []
else:
    motsSejlectionnejs = form.getlist('motsSejlectionnejs') or []
motsFabriquejs = form.getlist('motsFabriquejs') or []
sejlectMot = form.getvalue('sejlectMot')
if sejlectMot:
    if sejlectMot in motsSejlectionnejs:
        motsSejlectionnejs.remove(sejlectMot)
    else:
        motsSejlectionnejs.append(sejlectMot)
sauvegarde = ('sauvegarde' in form) ^ ('avecSauvegarde' in form)
modedEmploi = ('modedEmploi' in form) ^ ('avecModedEmploi' in form)
fabriquer = form.getvalue('fabriquer')

# l'en-teste
print("""
    <html xmlns="http://www.w3.org/1999/xhtml">
    <head>
    <title>fabrique ah mots</title>
    <meta http-equiv="content-type" content="text/html; charset=UTF-8"/>
    <style type="text/css">
    a:link { text-decoration:none; } 
    sti { color:black;  font-size: 35pt; margin: 0%%; font-weight:normal; font-style: italic;}
    mi1, .mi1 { color:black; font-size: 16pt; margin: 0%%; font-weight:normal; }
    mi2, .mi2 { color:darkred; font-size: 16pt; margin: 0%%; font-weight:normal; }
    mi3, .mi3 { color:darkgreen; font-size: 16pt; margin: 0%%; font-weight:normal; }
    mi4, .mi4 { color:black; font-size: 16pt; margin: 0%%; font-weight:bold; }
    mi5, .mi5 { color:darkred }
    mi6, .mi6 { color:darkgreen }
    #af1 {margin-top: 20px; margin-bottom: 20px; margin-right: 100px; margin-left: 50px; background-color: White; }
    #af2 {margin-top: 20px; margin-bottom: 20px; margin-right: 100px; margin-left: 100px; background-color: White; }
    #af3 {margin-top: 20px; margin-bottom: 20px; margin-right: 0px; margin-left: 50px; background-color: White; }
    button {padding: 0; border: none; background: none;}
    </style>
    </head>
    """)
# le titre
print("""
    <body>
    <form action="FabriqueAhMots" method="post">
    <table><tr><td><sti>la fabrique à mots de </sti></td><td><img src="../ressources/echiquierLatejcon4-200T.png"></td></tr></table>
""")
# les corpus
print("""
    <div id="af1"><mi1>le corpus modehle (au choix) :</br></mi1></div><div id="af2">
    """)
alt = True
for nomCorpus in list(TOUS_CORPUS.keys()):
    alt = not alt
    if nomCorpus == corpus:
        mic = 'mi4'
    elif alt:
        mic = 'mi3'
    else:
        mic = 'mi2'
    print(f"""
        <button value="{nomCorpus}" name="nouveauCorpus" class="{mic}">{nomCorpus}</button>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
        """)
print('</div>')

# si un corpus est dejjah choisi, affiche le champs pour renseigner le dejbut de mot et l'ordre de fabriquer
if corpus:
    print("""
        <div id="af1">        
        <mi1>le dejbut des mots (optionnel) : </mi1>
        <input type="text" name="dejbutMot" value="{}" style="font-size: 16pt" size="10">
        <br/><mi1>l'ordre de </mi1>
        <input type="submit" name="fabriquer" value="fabriquer" style="font-size: 16pt">
        </div>
        """.format(dejbutMot))
    if fabriquer:
        # lancement de la fabrication en fonction des paramètres présents
        nomFichier = 'ressources/' + TOUS_CORPUS[corpus]
        markovSurMots = MarkovSurMots()
        markovSurMots.initCorpus(nomFichier)
        # 1) met les mots sejlectionnejs en teste de la liste des mots fabriquejs
        motsFabriquejs = deepcopy(motsSejlectionnejs)
        # 2) complehte la liste des mots fabriquejs ah 100 
        # il est possible qu'un dejbut de mot ne puisse gejnejrer suffisamment de mots diffejrents
        compteurdArrest = 0
        while compteurdArrest < NBMOTS*10 and len(motsFabriquejs) < NBMOTS:
            compteurdArrest +=1
            try:
                nouveauMot = markovSurMots.complehteMot(dejbutMot)
            except ValueError:
                break
            if nouveauMot in motsFabriquejs:
                continue
            motsFabriquejs.append(nouveauMot)
    
# si des mots ont dejjah ejtej fabriquejs, les affiche
if motsFabriquejs:
    print('<div id="af2">')
    alt = True
    for mot in motsFabriquejs:
        alt = not alt
        if mot in motsSejlectionnejs:
            mic = 'mi4'
        elif alt:
            mic = 'mi3'
        else:
            mic = 'mi2'
        print(f"""
            <button name="sejlectMot" value="{mot}" class={mic}>{mot}</button>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
            """)
    print('</div>')
    
    # la sauvegarde
    print("""
        <div id="af1">
        <br/><mi1>la </mi1>
        <input type="submit" name="sauvegarde" value="sauvegarde" style="font-size: 16pt">
        """)
    if sauvegarde:
        print("""
            <br/>La sauvegarde des mots sejlectionnejs se fait par un copier-coller : <mi4>{}</mi4>
            """.format(', '.join(motsSejlectionnejs)))
        if len(motsSejlectionnejs) != 0:
            print("""
                <br/>La remise à zejro gejnejrale des sejlections se fait par le bouton 
                <input type="submit" name="raz" value="raz" style="font-size: 16pt">
                """)
    print('</div>')
        
# le mode d'emploi
print("""
    <div id="af3">
    <br/>
    <input type="submit" name="modedEmploi" value="mode d'emploi" style="font-size: 10pt">
    """)
if modedEmploi:
    print("""
        Tout ce qui est en couleur (<mi5>rouge</mi5> et <mi6>vert</mi6>) et <b>en gras</b> est clicable.
        <br/>Le corpus qui sert à modejliser doit estre sejlectionné en premier. On peut changer à tout moment de corpus modehle en cliquant simplement sur le nom du nouveau corpus choisi.
        <br/>La contrainte de dejbut pour les mots fabriquejs est optionnelle. Si le champ est laissé vide, la fabrique à mots travaille sans contrainte.
        <br/>Pour fabriquer de nouveaux mots, il suffit de donner l'ordre de fabriquer.
        <br/>L'ordre de fabriquer efface tous les mots en <mi5>rouge</mi5> et <mi6>vert</mi6> et les remplace par les nouveaux mots fabriquejs. Pour conserver un mot par delà d'une nouvelle fabrication, il suffit de cliquer ce mot. Il apparaist alors <b>en gras</b> et ne sera pas effacé lors de la prochaine fabrication. Inversement, pour remettre un mot sauvegardé (affiché <b>en gras</b>) dans la liste des mots effaçables, il suffit de cliquer ce mot. Il redevient alors affiché en <mi5>rouge</mi5> ou <mi6>vert</mi6>. 
        <br/>Pour effacer ce mode d'emploi, il suffit de cliquer sur le bouton "mode d'emploi".
    """)

# passage de l'ejtat
if sauvegarde: print(f'<input type="hidden" name="avecSauvegarde" value="1"></input>')
if modedEmploi: print(f'<input type="hidden" name="avecModedEmploi" value="1"></input>')
if corpus: print(f'<input type="hidden" name="corpus" value="{corpus}"></input>')
for sel in motsSejlectionnejs:
    print(f'<input type="hidden" name="motsSejlectionnejs" value="{sel}"></input>')
for fab in motsFabriquejs:
    print(f'<input type="hidden" name="motsFabriquejs" value="{fab}"></input>')

print('</form></body></html>')
